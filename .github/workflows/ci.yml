name: YSM CI pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  get-user-permission: # if push: exits as failure if user pushing to master does not have write permissions
    runs-on: ubuntu-24.04
    if: github.event_name == 'push'
    steps:
      - name: Get User Permission
        id: check_access
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check User Permission
        if: steps.check_access.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.check_access.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1

  security-check: # if pr: exits as failure if forked pr, before the build steps
    runs-on: ubuntu-24.04
    needs: get-user-permission
    if: github.event_name == 'pull_request'
    outputs:
      is_internal: ${{ steps.check_fork.outputs.is_internal }}
    steps:
      - name: Check if PR is from a Fork
        id: check_fork
        run: |
          if [[ "${{ github.event.pull_request.head.repo.fork }}" == "true" ]]; then
            echo "This PR is from a fork and cannot proceed."
            echo "is_internal=false" >> $GITHUB_ENV
            exit 1
          else
            echo "is_internal=true" >> $GITHUB_ENV
          fi

  frontend-test-and-build:
    needs: security-check
    if: needs.security-check.outputs.is_internal == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Activate caching for yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ysm-frontend-${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ysm-frontend-${{ runner.os }}-yarn--

      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Run linting
        run: yarn lint

      - name: Build app
        run: yarn build
        env:
          NEXT_PUBLIC_ENV: ci
          NEXT_PUBLIC_ROLLBAR_ENV: CI
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_KEY }}
          NEXT_PUBLIC_FIREBASE_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_DOMAIN }}

      - name: Run unit tests
        run: yarn test:unit
